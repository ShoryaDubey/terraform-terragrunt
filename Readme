While working on our Terragrunt-based infrastructure, I encountered a few challenges related to state management and resource tracking. The first issue came up when I needed to import an additional EC2 instance into the existing production state file. Since the project uses modules, running terraform import required the correct module path syntax, and I had to ensure the resource wasn’t already being tracked in the state. This made the process slightly more complex, especially when working with multiple environments and module structures.

In addition to the import task, I updated our backend configuration to use S3 state locking via use_lockfile = true instead of relying on DynamoDB for state locking. Later, I had to change the location of the S3 state bucket, which meant running a -migrate-state operation to move the existing state without destroying the infrastructure. These changes ensured our remote state setup was both resilient and aligned with the project’s evolving storage strategy.